:root {
  --fg: #c5c8c6;
  --bg: #1d1f21;
  --selection: #373b41;
  --line: #282a2e;
  --comment: #969896;
  --red: #cc6666;
  --orange: #de935f;
  --yellow: #f0c674;
  --green: #b5bd68;
  --aqua: #8abeb7;
  --blue: #81a2be;
  --purple: #b294bb;
  --window: #4d5057;
  --window-dark: #45484f;
  --window-dark: #45484f;
}

* {
  margin: 0;
  padding: 0;
}

h1,h2,h3,h4,h5,h6 {
  font-weight: normal;
}

body {
  width: 100%;
  height: 100%;
  font-family: system-ui;
  line-height: 1.5;
  background-color: var(--bg);
  color: var(--fg);

  --monospace-family: Menlo, monospace;
  --monospace-size: 13px;
}

a { color: var(--blue); }
a:visited { color: var(--purple); }
a:active { color: var(--red); }

.cm-content {
  font-family: var(--monospace-family);
  font-size: var(--monospace-size);
}

html {
  height: 100%;
}

main {
  padding: 0.5em;
  display: block;
  margin: 0 auto;
  max-width: 768px;
}

ul {
  list-style-position: inside;
}

*+h1, *+p, *+ul {
  margin-top: 1em;
}

header {
  --header-height: 40px;
  --header-padding: 0.5em;
  --text-color: var(--bg);
  color: var(--text-color);
  background-color: var(--purple);
  /*background-image: linear-gradient(to right, #ffc6f9, var(--purple));*/
  height: var(--header-height);
  line-height: var(--header-height);
  display: flex;
}

header .title, header .spacer {
  flex: 1;
}

header a {
  text-decoration: none;
}
header a.text-link {
  padding: 0 var(--header-padding);
}

header a,
header a:visited,
header a:active {
  color: var(--text-color);
}

header svg {
  fill: var(--text-color);
  width: 24px;
  height: 24px;
}

header > :first-child {
  padding-left: var(--header-padding);
}
header > :last-child {
  padding-right: var(--header-padding);
}
header .image-link {
  display: flex;
  width: var(--header-height);
  height: var(--header-height);
  justify-content: center;
  align-items: center;
}

.bauble-placeholder {
  height: 500px;
  font-family: var(--monospace-family);
  font-size: var(--monospace-size);
}

body.main-page {
  display: flex;
  flex-direction: column;
}

body.main-page .bauble {
  flex: 1;
}

.bauble {
  --control-height: 40px;
  --horizontal-grip: linear-gradient(to bottom, var(--selection), var(--window), var(--line));
  --vertical-grip: linear-gradient(to right, var(--selection), var(--window), var(--line));

  height: 100%;
  display: flex;
  overflow: hidden;
  flex-direction: row-reverse;
}

.bauble > * { overflow: hidden; }

.bauble .code-container {
  display: flex;
  flex-direction: column;
  flex: 1 1 512px;
}

.bauble .canvas-container {
  display: flex;
  justify-content: start;
  align-items: center;
  flex-direction: column;
  flex: 0 1 512px;
}

.bauble .editor-container {
  overflow: hidden;
  display: flex;
  flex: 1;
}

.bauble .editor-container > * {
  flex: 1;
  max-width: 100%; /* required for horizontal scrolling */
}

.bauble .output-resize-handle {
  cursor: ns-resize;
  touch-action: none;
  background: var(--horizontal-grip);
  flex: none;
  flex-basis: 4px;
}

.bauble .resize-handle {
  flex: none;
  flex-basis: 4px;
  touch-action: none;
}

.bauble .canvas-resize-handle {
  cursor: ew-resize;
  background: var(--vertical-grip);
}

.bauble .output-container:not(:empty) {
  padding: 8px;
}
.bauble .output-container {
  overflow: auto;
  max-height: 25%;
}

.bauble .output-container .err {
  color: var(--red);
}

.bauble .output-container, span.timestamp, .toolbar input[inputmode=numeric] {
  font-family: var(--monospace-family);
  font-size: var(--monospace-size);
}

.toolbar {
  width: 100%;
  height: var(--control-height);
  line-height: var(--control-height);
  display: flex;
  user-select: none;
  background-color: var(--window);
  flex: none;
  overflow-x: auto;
  color: var(--aqua);
  fill: var(--aqua);
}

.toolbar button:not(.hidden:first-child)+button, .toolbar label+label {
  margin-left: -6px;
}

.toolbar .spacer {
  flex: 1;
}
.toolbar .scrubber {
  flex: 1;
  background-color: #8f8;
}
.toolbar .timestamp {
  padding: 0 1ch;
}
.toolbar input[inputmode=numeric] {
  text-align: center;
  border: none;
  width: 6ch;
  color: var(--aqua);
  background-color: var(--window-dark);
  box-shadow: inset 3px 0 3px -3px rgba(0,0,0,0.5), inset -3px 0 3px -3px rgba(0,0,0,0.5);
}

.toolbar .text {
  padding: 0 4px;
}

.toolbar fieldset {
  display: inline;
  border: none;
  padding: none;
  white-space: nowrap;
}

.toolbar button {
  min-width: var(--control-height);
  border: none;
  cursor: pointer;
  background-color: initial;
}

.toolbar fieldset label {
  display: inline-block;
  height: 100%;
  cursor: pointer;
  min-width: var(--control-height);
  text-align: center;
}

.toolbar fieldset input[type=radio] {
  display: none;
}

.toolbar button svg,
.toolbar fieldset input[type=radio] + span,
.toolbar fieldset input[type=radio] + svg {
  padding: 4px;
  border-radius: 6px;
}

.toolbar fieldset input[type=radio]:checked + span,
.toolbar fieldset input[type=radio]:checked + svg {
  background-color: rgba(0, 0, 0, 0.15);
}

.toolbar button:hover svg,
.toolbar fieldset label:hover input[type=radio] + span,
.toolbar fieldset label:hover input[type=radio] + svg {
  background-color: rgba(0, 0, 0, 0.1);
}

.toolbar button:active svg,
.toolbar fieldset label:hover input[type=radio]:checked + span,
.toolbar fieldset label:hover input[type=radio]:checked + svg {
  background-color: rgba(0, 0, 0, 0.2);
}

.toolbar .indicator {
  min-width: var(--control-height);
  display: flex;
}
.toolbar fieldset {
  display: flex;
  flex-direction: row;
}
.toolbar .indicator,
.toolbar fieldset label,
.toolbar button {
  display: flex;
  align-items: center;
  justify-content: center;
}
.toolbar .indicator svg {
  border-radius: 12px;
  padding: 2px;
}
.toolbar .indicator.compilation-error svg {
  background-color: var(--red);
  fill: var(--window);
}
.toolbar .hidden {
  display: none;
}
.toolbar .indicator svg,
.toolbar fieldset label svg,
.toolbar button svg {
  width: 20px;
  height: 20px;
}

.bauble canvas {
  max-width: calc(min(100%, 512px));
  max-height: calc(min(100% - 2 * var(--control-height), 512px));
  touch-action: none;
}

@media all and (max-width: 512px) {
  .bauble {
    flex-direction: column;
  }
  .bauble .resize-handle { flex-basis: 12px; }
  .bauble .canvas-resize-handle { background: var(--horizontal-grip); cursor: ns-resize; }
  .bauble .output-container { height: 1.5em; }
}
