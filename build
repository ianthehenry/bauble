#!/usr/bin/env bash

set -euo pipefail

prod_build=false
build_js=true
build_wasm=true

while [[ $# -gt 0 ]]; do
  case "$1" in
    --prod) prod_build=true ;;
    --js) build_wasm=false ;;
    --wasm) build_js=false ;;
    *)
      echo "unknown flag $1" >&2
      exit 1 ;;
  esac
  shift
done

rollup_args="--no-treeshake --no-indent"
emcc_args="-O0"
if [[ "$prod_build" == "true" ]]; then
  rollup_args="-p rollup-plugin-terser"
  emcc_args="-O3"
fi

if [[ "$build_js" == "true" ]]; then
  rm -rf public/js/main.js

  (
    cd ui/
    ./node_modules/.bin/rollup -c $rollup_args
  )
fi

if [[ "$build_wasm" == "true" ]]; then
  rm -rf public/js/janet.{js,wasm}

  preload_args=""
  for file in src/*.janet; do
    preload_args="$preload_args --preload-file $file@$(basename $file)"
  done
  preload_args="$preload_args --preload-file src/glslisp/@glslisp/"

  emcc \
    $emcc_args \
    -o public/js/janet.js \
    -I janet \
    janet/janet.c \
    src/driver.cpp \
    -lembind \
    $preload_args \
    -s "EXPORTED_FUNCTIONS=['_update_camera', '_update_time', '_update_view_type', '_rerender', '_initialize_janet', '_recompile_fragment_shader']" \
    -s USE_WEBGL2=1 \
    -s ALLOW_MEMORY_GROWTH=1 \
    -s AGGRESSIVE_VARIABLE_ELIMINATION=1 \
    -s EXPORTED_RUNTIME_METHODS=['ccall','cwrap']
fi
